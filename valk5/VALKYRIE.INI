[Clipper 5-Formatting]
;----------------------------------------------------
; maximum source line length before splitting with ';'
LineLength=70
;----------------------------------------------------
; number of spaces to indent each nested level
; if 'Indent=Tab', uses a single tab for each nested level
Indent=3
;----------------------------------------------------
; case for different types of words
; 0=Factory (default), 1=Lower, 2=Upper, 3=Mixed, 4=Hungarian
CaseVariables=1
CaseUDFs=1
CaseKeywords=1
CaseBuiltins=0
CaseLibrary=0
;----------------------------------------------------
; default delimiter for string constants
; 0=single quote, 1=double quote, 2=bracket
StringDelimiter=1
;----------------------------------------------------
; Yes:   function( a, b )     No:   function(a, b)
SpaceParens=No
;----------------------------------------------------
; Yes:   { 1, 2, 3 }          No:   {1, 2, 3}
SpaceBraces=No
;----------------------------------------------------
; Yes:   array[ subscript ]   No:   array[subscript]
SpaceBrackets=No
;----------------------------------------------------
; Yes:   function(a, b, c)    No:   function(a,b,c)
SpaceCommas=Yes
;----------------------------------------------------
; Yes:   a .and. b            No:   a.and.b  (not recommended!)
SpaceLogical=Yes
;----------------------------------------------------
; Yes:   a > b                No:   a>b
SpaceRelational=Yes
;----------------------------------------------------
; Yes:   a + b                No:   a+b
SpaceBinaryMath=Yes
;----------------------------------------------------
; Yes:   { | x | x+1 }        No:   { |x| x+1 }
SpaceBars=No
;----------------------------------------------------
; if Yes:   endif    && if (eof())
CommentIF=No
;----------------------------------------------------
; if Yes:   enddo    && do while (.not. eof())
CommentWHILE=No
;----------------------------------------------------
; if Yes:   next     && for i=1 to 10
CommentFOR=No
;----------------------------------------------------
; Yes:   if (x > 1)           No:   if x > 1
ParenIF=Yes
;----------------------------------------------------
; Yes:   do while (x==0)      No:   do while x==0
ParenWHILE=Yes
;----------------------------------------------------
; Yes:   case (x==0)          No:   case x==0
ParenCASE=No
;----------------------------------------------------
; Yes:   if !(A $ B)          No:   if !A $ B
; note: these expressions are identical, but they look confusing
; without the parens.
ParenCompoundNOT=Yes
;----------------------------------------------------
; if Yes, uses ELSEIF whenever possible in nested if/endif structures
; if No, will not use ELSEIF
UseELSEIF=Yes
;----------------------------------------------------
; maximum number of ELSEIFs allowed before converting to CASE
; example:  MaxELSEIFs=3         MaxELSEIFs=2
;           ------------         ------------
;                                DO CASE
;           IF A                 CASE A
;              <stmt>               <stmt>
;           ELSEIF B             CASE B
;              <stmt>               <stmt>
;           ELSEIF C             CASE C
;              <stmt>               <stmt>
;           ELSEIF D             CASE D
;              <stmt>               <stmt>
;           ENDIF                ENDCASE
;
MaxELSEIFs=2
;----------------------------------------------------
; maximum number of '?' statements before translating as TEXT/ENDTEXT
MaxQOut=10
;----------------------------------------------------
; if Yes, formats embedded non-ascii characters to CHR()
; note: CR, LF, Ctrl-Z, and NULL are always formated as CHR().
UseCHR=No
;----------------------------------------------------
; perform preprocessor translations where possible
; note: the 'translate' option enables any which have 'yes' here
Translations=Yes
STD.CH=Yes
COMMON.CH=Yes
INKEY.CH=Yes
SET.CH=Yes
;----------------------------------------------------
; string to use for 'not equal to' operator
; should be "<>", "!=", or "#"
TokenNotEqual="!="
;----------------------------------------------------
; string to use for logical 'not'
; should be ".NOT." or "!"
TokenNOT="!"
;----------------------------------------------------
; string to use for exponential operator
; should be "^" or "**"
; note: "**" cannot be used for inline assignments:
;     OK:   x ^= 2
; NOT OK:   x **= 2
TokenExponent="^"
;----------------------------------------------------
; string to use for assignments
; should be "=" or ":="
; note: declarations and inline assignments always use the ":=" form
TokenAssign=":= "
;----------------------------------------------------
; base name for unnamed static variables
StaticBase=Static
;----------------------------------------------------
; base name for unnamed local variables
LocalBase=Local
;----------------------------------------------------
; base name for code block arguments
CodeblockBase="_"
;----------------------------------------------------
; file extension to use for recovered source code files
SourceExtension=.SRC
; text to be placed at the top of each recovered source file
ModuleHeader=
;----------------------------------------------------
; text to be placed before each recovered procedure
ProcedureHeader="********************************"
;----------------------------------------------------
; text to be placed before each recovered function
FunctionHeader="********************************"
;----------------------------------------------------
; text to be placed at the end of each recovered source file
EOFComment="* EOF"
;----------------------------------------------------
ArgsBase=Arg
;----------------------------------------------------
UseSTD.CH=Yes
UseSET.CH=Yes
UseINKEY.CH=Yes
UseCOMMON.CH=Yes

[Clipper 5-Interface]
VideoOption=0
VideoDriver=0
HighIntensity=No
Shadows=Yes
PullDownMenus=Yes
SubMenuBeneath=No
MouseDoubleClick=10
MouseRepeatDelay=3
MouseRepeatSpeed=0
AutoSave=Yes
OpenWindows=1,2,0,0,0
SymbolTableOptions=0,1,0,1,0,1,0,1,0,1,0,1,0
MainWindow=0,1,40,18
PCodeWindow=40,1,40,18
MessageWindow=0,19,80,5
SymbolWindow=0,1,80,23
Colors=112,116,120,47,112,113,117,116,117,116,113,116,112,23,47,23,47,79,78,47,74,112,116,47,116,48,63,47,23,30,47,48,112,122,112,117,112,127,116,120,112,127,116,113,112,49,31,26,27,48,30,23,31,30,23
ExternalsWindow=0,0,0,0,0
;----------------------------------------------------

[Clipper 5-Libraries]
CLIPPER=CLIPPER.VLB
EXTEND=EXTEND.VLB
ERRORSYS=ERRORSYS.VLB
BLINKER=BLINKER.VLB
CT3=CT3.VLB
