!Short: GWChangePassw() ^bLet the user change his password
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWChangePassw()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Let an user change his password in file USERS.DBF. Use this function in
   combination with GWLogin().

 ^bSyntax
   ^bGWChangePassword([cUserId]) Ä> NIL

!Seealso:"GWLogin()"  "GWUsers()"  
!Short: GWErrorLog()    ^bView the error log                                          ^A4FM
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWErrorLog()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   View the files ERRORLOG.DBF and TRACE.DBF. These files contain
   information about runtime error a system runs into. A TBROWSE window is
   shown with all the runtime errors that occurred. By pressing the F10-key
   another window appears with all the names of functions and procedures
   that where active during the runtime error.

   Note : Only if the command ^bLOG ERRORS ON^b is used errors will be
   logged to the error files.

 ^bSyntax
   ^bGWErrorLog([lSpecial]) Ä> NIL

!Seealso:"LOG ERRORS ..."  
!Short: GWLogin()       ^bProcedure to log into a network application
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWLogin()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Procedure to log into a network system. It is possible to secure a
   system with a password per user. Furthermore the use of the system is
   registered per user. This function uses 2 files : USERLOG.DBF and
   USERS.DBF. In USERLOG.DBF the use of the system is registered and
   USERS.DBF contains the data for the authorized users. The first time the
   function GWLogin() is used both files are made. In USERS.DBF a user is
   created (BEHEER in GHOSTHOL.LIB and SUPER in GHOSTUSA.LIB) and a
   password must be typed in. Then it is possible to add new users with the
   function GWUsers(). The USERLOG can be viewed with the function
   GWUserLog().
   Per user it is possible to define a securitylevel. This level is defined
   in the file USERS.DBF. Within your application you can use this level to
   prevent users to use certain functions. I always give the 'SUPER' user
   level 1 and other users level 2 or higher.

 ^bSyntax
   ^bGWLogin(cUserId, bSystem, cSystem) Ä> NIL

!Seealso:"GWChangePassw()"  "GWUsers()"  "GWUserLog()"  
!Short: GWUserlog()     ^bView the userlog file
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWUserlog()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   View the file USERLOG.DBF. This file contains information about
   activities by a user in a system. The login time and logout time are
   registered, as well as illegal attempts to use a system. Use this
   function in conjunction with the function GWLogin().

 ^bSyntax
   ^bGWUserLog([lSpecial]) Ä> NIL

!Seealso:"GWLogin()"  "GWUsers()"  
!Short: GWUsers()       ^bView and edit the users file
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWUsers()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   View and edit the file USERS.DBF. New users can be added to the file or
   users can be expelled from a system temporary by placing a .F. in the
   field 'ALLOWED_ON'. Use this function in conjunction with the function
   GWLogin().

 ^bSyntax
   ^bGWUsers([lSpecial]) Ä> NIL

!Seealso:"GWLogin()"  "GWUserLog()"  
!Short: LOG ERRORS ...  ^bDetermine if runtime errors must be logged to a file        ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1ELOG ERRORS ...^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Determine if runtime error must be logged to a file or not. Errors are
   always displayed on the screen. The data of logged errors can be viewed
   with GWErrorLog().

 ^bSyntax
   ^bLOG ERRORS [ON | OFF]

!Seealso:"GWErrorLog()"  
