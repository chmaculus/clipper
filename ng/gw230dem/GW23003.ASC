!Short: GW Color System ^bOverview of the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGW Color System^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10

   ^bOverview
   The GhostWare color system makes it possible to make your application
   more user friendly. You can give your users the possibility to let them
   choose there own color preference for a application. These private
   colors can be stored in a user file and retrieved whenever the user uses
   the application again. You can use the file USERS.DBF used by the
   function GWLogin() to store the private color settings.

   The colors are stored into a static array. So if you want to save this
   to a file your database driver must be able to handle arrays (e.g.
   DBFSIX driver from Successware Inc. or DBFCDX from Clipper 5.2).

   All you have to do is : Initialize the GhostWare color system, define
   your (default) colors and use them. Then you can let the users change
   the colors, and save the color settings (for each user) to a file.

   ^bFunctions
   The following functions belong to the GhostWare color system :
   ^bGWcActive()^b   - Check if GhostWare color system is activated
   ^bGWcArray()^b    - Save and restore the GhostWare color array
   ^bGWcChange()^b   - Change a color interactively
   ^bGWcDefine()^b   - Define a color in the GhostWare color array
   ^bGWcDelete()^b   - Delete a color from the GhostWare color array
   ^bGWcExist()^b    - Check if a color exists in the GhostWare color array
   ^bGWcInit()^b     - Initialize the GhostWare color system
   ^bGWcKill()^b     - Kill the GhostWare color array
   ^bGWcSetColor()^b - GhostWare color system equivalent for SETCOLOR()
   ^bGWcString()^b   - Compose a color string to be used in function calls
!Short:
^A1F                ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EŞ^A1F ^A1EÛ^A1F 
A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F ^A1Eİ^A1F
^A1F                 ^A6Eß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß ß^A1F
^A1F                 ^A6E    ^A68ÜÜÛÛÛÛÛÛÛÜÜ             ÜÜÛÛÛÛÛÛÛÜÜ    ^A1F
^A1F      ÜÜÛÛÛÜÜ   ^A68    Ûßß  ^A6FÜÜÜ^A68  ßßÛÛÜ       ÜÛÛßß  ^A6FÜÜÜ^A68  ßßÛ    ^A1F   ÜÜÛÛÛÜÜ
^A1F    ÜÛÛÛÛÛÛÛÛÛÜ^A6E       ^A6FÜÛÛÛÛ^A0FÛ^A6FÛÛÜ   ^A68Û       Û^A6F   ÜÛÛÛÛÛÛÛÜ       ^A1FÜÛÛÛÛÛÛÛÛÛÜ
^A1F   ÛÛÛÛÛÛÛÛÛÛÛ^A6F       ÛÛÛÛÛ^A0FÛß   Û^A6F             Û^A0F   ßÛÛÛÛÛÛ^A6F       ^A1FÛÛÛÛÛÛÛÛÛÛÛ
^A1F   ÛÛÛÛÛÛÛÛÛÛ^A6F        ^A0FÛÛÛÛÛ     ^A1FÛ^A6F             ^A1FÛ^A0F     ÛÛÛÛ^A1FÛ^A6F        ^A1FÛÛÛÛÛÛÛÛÛÛ
^A1F   ÛÛÛÛÛÛÛÛÛÛ^A6F        ß^A0FÛÛÛÛ    Ü^A6Fß  ^A6AÜÜÛÛÛÛÛÜÜ^A6F  ß^A0FÜ    ÛÛÛÛ^A6Fß        ^A1FÛÛÛÛÛÛÛÛÛÛ
^A1F   ÛÛÛÛÛÛÛÛÛ^A6F           ßß^A0FÛÜÜ^A6Fßß   ^A6AÛÛÛÛÛÛÛÛÛÛÛ^A6F   ßß^A0FÜÜÛ^A6Fßß           ^A1FÛÛÛÛÛÛÛÛÛ
^A1F   ßÛÛÛÛÛÛÛÛ^A6F                     ^A6AÛÛÛÛÛÛÛÛÛÛÛ^A6F                     ^A1FÛÛÛÛÛÛÛÛß
^A1F     ßÛ^A2F  Did you expect to see anything sensible about an empty item? ^A1FÛß
^A1F       ßßßß ^A6F                        ^A6Aßßßßß^A6F                        ^A1F ßßßß
^A1F            ^A6F                   ^A6CÜÜÜÛÛÛÛÜÛÛÛÛÜÜÜ^A6F                   ^A1F
^A1F             ^A6F              ^A6CÜÜÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÜÜ^A6F              ^A1F
^A1F             ^A6F          ^A6CÜÜÛÛÛÛÛÛ^A0Cßßßßßßßßßßßßßßß^A6CÛÛÛÛÛÛÜÜ^A6F          ^A1F
^A1F              ^A6F        ^A6CßÛÛÛÛ^A0Cß     ^A04ÜÜÜÜÜ^A0CÜ^A04ÜÜÜÜÜ^A0C     ß^A6CÛÛÛÛß^A6F        ^A1F
^A1F               ^A61Ü ^A6F       ^A6CßÛÛÛÛ^A0CÜÜÜ^A64ÛÛÛÛÛÛ^A6CÛ^A64ÛÛÛÛÛÛ^A0CÜÜÜ^A6CÛÛÛÛß^A6F        ^A61Ü^A1F
^A1F                 ^A61Ü^A6F        ^A6CßÛÛÛÛÛ^A64ÛÛÛÛÛÛ^A6CÛ^A64ÛÛÛÛÛÛ^A6CÛÛÛÛÛß^A6F        ^A61Ü^A1F
^A1F                   ^A61ÜÜ^A6F       ^A6CßßÛÛ^A64ÛÛÛÛÛÛ^A6CÛ^A64ÛÛÛÛÛÛ^A6CÛÛßß^A6F       ^A61ÜÜ^A1F
^A1F                        ^A61ÜÜÜÜ^A6F     ^A64ÛÛÛÛÛÛÛÛÛÛÛ^A6F     ^A61ÜÜÜÜ^A1F
!Seealso:GW23999.NGO:"Dummy()"  GW23999.NGO:"EyeAmAFool()"  GW23999.NGO:"GetCrazy()"  GW23999.NGO:"Set Stupidity On"  
!Short: GWBorder()      ^bGet/set the border color
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWBorder()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Get/set the border color. If a new color is supplied this will be used
   for subsequent screen painting. The current color setting is returned as
   a character string.

 ^bSyntax
   ^bGWBorder([cColor]) Ä> cResult

!Seealso:"GWEnhanced()"  "GWStandard()"  "GWUnselected()"  
!Short: GWChangeColor() ^bChoose a color with cursor keys of a mouse
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWChangeColor()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Choose a color with the cursor keys or a mouse.
   On the screen a window is displayed in which the user can move a cursor
   with the cursor keys or with a mouse. If the desired color is found the
   user can press the ENTER key or the left mouse button. The chosen color
   string is returned. If the ESCAPE key or the right button is pressed the
   default color string is returned.

 ^bSyntax
   ^bGWChangeColor([cText], [nTop], [nLeft], [cDefColor]) Ä> cResult

!Short: GWColor2Num()   ^bConvert a color string into a numeric value
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWColor2Num()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Convert a color string into a numeric value. This value is the same as
   the attribute byte of a character on the screen.

 ^bSyntax
   ^bGWColor2Num(cColor) Ä> nResult

!Seealso:"GWNum2Color()"  
!Short: GWEnhanced()    ^bGet/set the enhanced color
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWEnhanced()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Get/set the enhanced color. If a new color is supplied this will be used
   for subsequent screen painting. The current color setting is returned as
   a character string.

 ^bSyntax
   ^bGWEnhanced([cColor]) Ä> cResult

!Seealso:"GWBorder()"  "GWSplitColor()"  "GWStandard()"  "GWUnselected()"  
!Short: GWNum2Color()   ^bConvert a numeric value into a color string
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWNum2Color()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Convert a numeric value into a color string. This numeric value is the
   same as the attribute byte of a character on the screen.

 ^bSyntax
   ^bGWNum2Color(nColor) Ä> cResult

!Seealso:"GWColor2Num()"  
!Short: GWSplitColor()  ^bSplit a color string into 5 seperate colors strings
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWSplitColor()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Split a color string into 5 seperate color strings.

 ^bSyntax
   ^bGWSplitColor([cColor]) Ä> aResult

!Seealso:"GWBorder()"  "GWEnhanced()"  "GWStandard()"  "GWUnselected()"  
!Short: GWStandard()    ^bSet/get the standard color
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWStandard()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Get/set the standard color. If a new color is supplied this will be used
   for subsequent screen painting. The current color setting is returned as
   a character string.

 ^bSyntax
   ^bGWStandard([cColor]) Ä> cResult

!Seealso:"GWBorder()"  "GWEnhanced()"  "GWSplitColor()"  "GWUnselected()"  
!Short: GWUnselected()  ^bGet/set the unselected color
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWUnselected()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Get/set the unselected color. If a new color is supplied this will be
   used for subsequent screen painting. The current color setting is
   returned as a character string.

 ^bSyntax
   ^bGWUnselected([cColor]) Ä> cResult

!Seealso:"GWBorder()"  "GWEnhanced()"  "GWSplitColor()"  "GWStandard()"  
!Short: GWcActive()     ^bCheck if the GhostWare Color System is activated
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcActive()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Check if the GhostWare color system is activated.

 ^bSyntax
   ^bGWcActive() Ä> lResult

!Seealso:"GWcInit()"  
!Short: GWcArray()      ^bSave and restore the GhostWare Color System array
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcArray()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Save and restore the GhostWare color system array. This way the color
   array can be saved for later use, for example in a database. The array
   can be restored to the GhostWare color system too. This makes it
   possible to save a color setting for each user to a file.

 ^bSyntax
   ^bGWcArray([aColor]) Ä> aResult

!Seealso:"GWcDefine()"  
!Short: GWcChange()     ^bChange a color from the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcChange()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Change a color from the GhostWare color system.
   On the screen a window is displayed in which the user can move a cursor
   with the cursor keys or with a mouse. If the desired color is found the
   user can press the ENTER key or the left mouse button. The changed color
   will be saved in the GhostWare color system array. If the ESCAPE key or
   the right button the color setting will not be changed.
   PS. This function uses GWChangeColor().

 ^bSyntax
   ^bGWcChange(cShortName) Ä> cResult

!Short: GWcDefine()     ^bDefine a color in the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcDefine()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Define a color in the GhostWare color system. The color setting is
   stored for later use.

 ^bSyntax
   ^bGWcDefine(cShortName, [cColor], [cLongText]) Ä> cResult or NIL

!Seealso:"GWcInit()"  
!Short: GWcDelete()     ^bDelete a color from the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcDelete()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bSyntax
   ^bGWcDelete(cShortName) Ä> lResult

!Seealso:"GWcDefine()"  
!Short: GWcExist()      ^bCheck if a color exists in the GhostWare Color System array
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcExist()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Check if a color exists in the GhostWare color system array.

 ^bSyntax
   ^bGWcExist(cShortName) Ä> lResult

!Short: GWcInit()       ^bInitialize the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcInit()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Initialize the GhostWare color system. The color setting will be saved
   in a STATIC array.
   GhostWare Color system array contains arrays with following elements:
     [1] - Short name
     [2] - Color string
     [3] - Long name (max. 36 characters)

 ^bSyntax
   ^bGWcInit() Ä> NIL

!Seealso:"GWcActive()"  "GWcDefine()"  
!Short: GWcKill()       ^bEmpty the GhostWare Color System array
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcKill()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Empty the GhostWare color system array.

 ^bSyntax
   ^bGWcKill() Ä> aResult

!Seealso:"GWcDefine()"  
!Short: GWcSetColor()   ^bSet the colors using the GhostWare Color System
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcSetColor()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Set the colors for subsequent screen painting using the GhostWare color
   system.

 ^bSyntax
   ^bGWcSetColor(cColors) Ä> cResult

!Seealso:"GWcDefine()"  "GWcInit()"  "GWcString()"  
!Short: GWcString()     ^bCompose a color string to be used in function calls
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A10¿^A10
 ^A1F³  ^A1EGWcString()^A10  ³^A10
 ^A1FÀ^A10ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ^A10
 ^bDescription
   Compose a color string to be used in function calls, e.g. GWAsk(),
   SETCOLOR() and so on.

 ^bSyntax
   ^bGWcString(cColors) Ä> cResult

!Seealso:"GWcDefine()"  "GWcInit()"  "GWcSetColor()"  
