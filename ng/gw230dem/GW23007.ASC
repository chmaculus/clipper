!Short: Changes Getsys  ^bModifications to the Get system                             ^A4FM
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EChanges Getsys^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФФФй^A10

   The following modifications in ^bGETSYS.PRG^b of Clipper 5.2 are made :

   - the ^bcursor size^b shows that characters will be inserted (м) or will
   be overwritten (_);
   - the ^bcursor is turned on^b (_) when the GETlist is activated and will
   be restored to it's original size after leaving the GETlist;
   - after pressing the ^bALT-A^b keys in a field, an ASCII-table is
   displayed;
   - the Get system is made mouse sensitive. It is possible to jump to any
   get field. Or to jump to any position in a get field;
   - the entire Getlist can be validated with the command READ VALIDATE;
   - if SET WRAP is ON and ReadExit() is .F. then it is possible to wrap
   the Getlist. This means that pressing the down arrow key in the last Get
   field moves the cursor to the first Get field. And pressing the up arrow
   key in the first Get field moves the cursor to the last Get field.

   ^bNOTE :
   In previous versions of the library (version 2.2 and earlier) pressing
   the ^bALT-K^b keys in a date-field, displayed a calender. This option is
   removed out of GETSYS.PRG. Use the new command GET...CALENDER instead.
!Short:
^A1F                ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eо^A1F ^A1Eл^A1F 
A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F ^A1Eн^A1F
^A1F                 ^A6Eп п п п п п п п п п п п п п п п п п п п п п^A1F
^A1F                 ^A6E    ^A68ммлллллллмм             ммлллллллмм    ^A1F
^A1F      ммлллмм   ^A68    лпп  ^A6Fммм^A68  ппллм       мллпп  ^A6Fммм^A68  ппл    ^A1F   ммлллмм
^A1F    млллллллллм^A6E       ^A6Fмлллл^A0Fл^A6Fллм   ^A68л       л^A6F   млллллллм       ^A1Fмлллллллллм
^A1F   ллллллллллл^A6F       ллллл^A0Fлп   л^A6F             л^A0F   плллллл^A6F       ^A1Fллллллллллл
^A1F   лллллллллл^A6F        ^A0Fллллл     ^A1Fл^A6F             ^A1Fл^A0F     лллл^A1Fл^A6F        ^A1Fлллллллллл
^A1F   лллллллллл^A6F        п^A0Fлллл    м^A6Fп  ^A6Aммлллллмм^A6F  п^A0Fм    лллл^A6Fп        ^A1Fлллллллллл
^A1F   ллллллллл^A6F           пп^A0Fлмм^A6Fпп   ^A6Aллллллллллл^A6F   пп^A0Fммл^A6Fпп           ^A1Fллллллллл
^A1F   плллллллл^A6F                     ^A6Aллллллллллл^A6F                     ^A1Fллллллллп
^A1F     пл^A2F  Did you expect to see anything sensible about an empty item? ^A1Fлп
^A1F       пппп ^A6F                        ^A6Aппппп^A6F                        ^A1F пппп
^A1F            ^A6F                   ^A6Cмммллллмллллммм^A6F                   ^A1F
^A1F             ^A6F              ^A6Cммлллллллллллллллллллмм^A6F              ^A1F
^A1F             ^A6F          ^A6Cммлллллл^A0Cппппппппппппппп^A6Cллллллмм^A6F          ^A1F
^A1F              ^A6F        ^A6Cплллл^A0Cп     ^A04ммммм^A0Cм^A04ммммм^A0C     п^A6Cллллп^A6F        ^A1F
^A1F               ^A61м ^A6F       ^A6Cплллл^A0Cммм^A64лллллл^A6Cл^A64лллллл^A0Cммм^A6Cллллп^A6F        ^A61м^A1F
^A1F                 ^A61м^A6F        ^A6Cпллллл^A64лллллл^A6Cл^A64лллллл^A6Cлллллп^A6F        ^A61м^A1F
^A1F                   ^A61мм^A6F       ^A6Cпплл^A64лллллл^A6Cл^A64лллллл^A6Cллпп^A6F       ^A61мм^A1F
^A1F                        ^A61мммм^A6F     ^A64ллллллллллл^A6F     ^A61мммм^A1F
!Seealso:GW23999.NGO:"Dummy()"  GW23999.NGO:"EyeAmAFool()"  GW23999.NGO:"GetCrazy()"  GW23999.NGO:"Set Stupidity On"  
!Short: GET BUTTON      ^bUse a push button in a GET                                  ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET BUTTON^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФй^A10
 ^bDescription
   Use a push button in a GET-list. The button is shown with a shadow under
   it. When the user presses the ENTER-key the pressing of the button is
   simulated. After the pressing the ENTER-key a user function can be
   executed and the getlist can be exited.

 ^bSyntax
   ^b@nRow, nCol GET cVar                               ;
   ^b            [COLOR cColor]                         ;
   ^b            BUTTON cText                           ;
   ^b            [DO | EXECUTE cFunction [STAY | KEEP]] ;
   ^b            [EXITREAD | STOPREAD]                  ;
   ^b            [WHEN bWhen]                           ;
   ^b            [VALID bValid]

!Short: GET CALCULATOR  ^bUse a calculator in a GET                                   ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET CALCULATOR^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Use a calculator in a numeric GET-field. If the user presses the ALT-K
   keys a calculator is shown. The calculated value can be copied to the
   GET-field. This only makes sense in a GET-field with a type of NUMERIC.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]  ;
   ^b            GET cVar                    ;
   ^b            CALCULATOR                  ;
   ^b            [WHEN bWhen]                ;
   ^b            [VALID bValid]

!Short: GET CALENDER    ^bUse a calender in a GET                                     ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET CALENDER^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Use a calender in a date GET-field. If the user presses the ALT-K keys a
   calender is shown. After pressing the ENTER-key the date is copied to
   the GET-field. This only makes sense in GET-field with a type of DATE.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]  ;
   ^b            GET cVar                    ;
   ^b            CALENDER                    ;
   ^b            [WHEN bWhen]                ;
   ^b            [VALID bValid]

!Short: GET CHECKBOX    ^bUse checkboxes within a GETlist                             ^A4FM
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET CHECKBOX^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Use CheckBoxes within a GETlist. The user can select answers by pressing
   the spacebar.

 ^bSyntax
   ^b@nRow, nCol GET cVar                   ;
   ^b            CHECKBOX <aOptions>        ;
   ^b            [CHECKCOLOR <cColCheck>]   ;
   ^b            [ANSWERS <aAnswers>]       ;
   ^b            [HORIZONTAL>]              ;
   ^b            [CHECK <cCheck>]

!Seealso:"GET RADIO"  
!Short: GET HISTORY     ^bStore the entered data in a GET into a history list
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET HISTORY^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Store the entered data in a history list. This means that all the data
   that is entered in the GET-field is stored into an array. The data will
   be showed in a history list when the user presses on the downarrow key.
   In this list the user can make his choice by pressing the enter key.
   The last entered data will be placed in the first position of the
   history list.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]  ;
   ^b            GET cVar                    ;
   ^b            HISTORY nMaxHistory         ;
   ^b            [WHEN bWhen]                ;
   ^b            [VALID bValid]

!Short: GET INITIALS    ^bEnter a initials in a GET                                   ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET INITIALS^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Enter a initials in a GET-field with using the shift or caps lock key.
   The first character and any character following a '.' will be converted
   to uppercase. For example if the user typed 'r.th.r.' the screen will
   display 'R.Th.R.'

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]  ;
   ^b            GET cVar                    ;
   ^b            INITIALS                    ;
   ^b            [WHEN bWhen]                ;
   ^b            [VALID bValid]

!Short: GET MEMO        ^bEdit a memo-string within a GET
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET MEMO^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФй^A10
 ^bDescription
   Edit a memo-string within a GET. If the cursor is located on the GETMEMO
   field the user can press a given key to edit the memo in a window.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]         ;
   ^b            GET MEMO cVar                      ;
   ^b            [AT nTop, nLeft, nBottom, nRight]  ;
   ^b            [COLOR cColor]                     ;
   ^b            [KEY aKey]                         ;
   ^b            [TITLE cTitle]                     ;
   ^b            [WHEN bWhen]                       ;
   ^b            [VALID bValid]
   ^b            [BLOCK bBlock]

!Short: GET PASSWORD    ^bEnter a password in a GET                                   ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET PASSWORD^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Enter a password in a GET-field. Of course the password is not shown
   during entry.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]]  ;
   ^b            GET cVar                    ;
   ^b            PASSWORD                    ;
   ^b            [WHEN bWhen]                ;
   ^b            [VALID bValid]

!Short: GET PICK        ^bShow a picklist in a GET field                              ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET PICK^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФй^A10
 ^bDescription
   Show a picklist when a GET-field is entered. After making a choice the
   answer is stuffed in the GET-field. The picklist is displayed as soon as
   the cursor enters the GET-field.

 ^bSyntax
   ^b@nRow, nCol [SAY cText [COLOR cColor]] ;
   ^b            GET cVar PICK aAnswers     ;
   ^b            [QUESTION cQuestion]       ;
   ^b            [WHEN bWhen]               ;
   ^b            [VALID bValid]

!Short: GET RADIO       ^bUse radiobuttons within a GETlist                           ^A4FM
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGET RADIO^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФй^A10
 ^bDescription
   Use radiobuttons within a GETlist.

 ^bSyntax
   ^b@nRow, nCol GET cVar                   ;
   ^b            RADIO aOptions             ;
   ^b            [RADIOCOLOR cColRadio]     ;
   ^b            [ANSWERS aAnswers]         ;
   ^b            [HORIZONTAL]               ;
   ^b            [CHECK cCheck]

!Seealso:"GET CHECKBOX"  
!Short: GWAsciiTable()  ^bShow an ASCII table
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWAsciiTable()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Show an ASCII-table. This function is used in the GETSYStem and in
   GWMemoEdit(). After pressing the ENTER key, the current character is
   returned.

 ^bSyntax
   ^bGWAsciiTable() -> cResult or NIL

!Short: GWCalender()    ^bShow a calender of the current month
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWCalender()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Show a calender of the current month. In a Getlist date-field the user
   can call this calender by pressing a key-combination. After pressing the
   ENTER key, the date is placed in the date-field. After pressing the
   ESCape key the original date will remain the same.

 ^bSyntax
   ^bGWCalender([lSpecial]) -> NIL

   in combination with the SETKEY-function :
   ^b#INCLUDE 'INKEY.CH'
   ^bSETKEY( nKey, {||GWCalender(lSpecial)} ) - NIL

!Short: GWGetFill()     ^bFill a field of a GETlist with a value
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWGetFill()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Fill a field of a GetList array with a value.

 ^bSyntax
   ^bGWGetFill(@aGetList, nGetNumber, xInfo) Ф> NIL

!Seealso:"GWGetNumber()"  
!Short: GWGetNumber()   ^bGet the number of a GET field in a GETlist
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWGetNumber()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Get the number of a GET-field in a GETlist.

 ^bSyntax
   ^bGWGetNumber(aGetList, cFieldName) Ф> nResult

!Seealso:"GWGetFill()"  
!Short: GWPostPick()    ^bShow a picklist in a GET field after wrong input
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWPostPick()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Show a picklist in a GET-field after wrong input.

 ^bSyntax
   ^b.... VALID GWPostPick(cText, aAnswers, [cColors], [cBorder]) Ф> .T.

!Seealso:"GWPrePick()"  
!Short: GWPrePick()     ^bShow a picklist or a message when a GET field is activated  ^A4FM
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EGWPrePick()^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Show a picklist or message when a GET-field is activated. After making a
   choice the answer is stuffed in the GET-field. The picklist is displayed
   as soon as the cursor enters the GET-field. If no 'aAnswers' are given
   then cText is displayed on the bottom line of the screen. So there is a
   helptext displayed on that line.

   Note : Since version 2.3 it is recommended to use the command GET PICK
   if you want to show a picklist when a GET field is entered. Use this
   function only to display a helptext on the bottom line.

 ^bSyntax
   ^b.... WHEN GWPrePick(cText, aAnswers, [cColors], [cBorder]) Ф> .T.

!Seealso:"GWPostPick()"  
!Short: READ VALIDATE   ^bRead command with validation when the Getlist is leaved     ^A2FN
 ^A4F DEMO version! After registering you will receive a complete version! ^A4F
 ^A1FкФФФФФФФФФФФФФФФФФ^A10П^A10
 ^A1FГ  ^A1EREAD VALIDATE^A10  Г^A10
 ^A1FР^A10ФФФФФФФФФФФФФФФФФй^A10
 ^bDescription
   Addition to standard READ command. With the VALIDATE keyword the entire
   Getlist is validated. When the Getlist is exited with another key then
   ESCape all the WHEN en VALID clauses are checked. If a clause is not
   met,the cursor is positioned on the corresponding Get field. This is
   very useful when the user has the ability to jump to any Get field with
   the mouse. In that case it is possible that a WHEN or VALID clause is
   bypassed, which means that the input is not validated entirely.
   If the user presses ESCape, no validation is done since the input is
   rejected by the user.

 ^bSyntax
   ^bREAD [SAVE] [VALIDATE]

