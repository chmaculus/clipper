!short:                            ^A1E* Clipper Summer '87 *^A1B
'------------------------------------------------------------------------------
 ^BClipper Summer '87
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 To build the Clipper Summer '87 demo program (RBckDemS.prg) :

 Compile with :

        ^BClipper RBckDemS^B

 Link with :

        ^BPLink86 FILE RBckDemS LIB RBck_S87,Extend,Clipper^B

        - or -

        ^BTLink RBckDemS,,NUL,RBck_S87+Extend+Clipper^B

        - or -

        ^BBlinker FILE RBckDemS LIB RBck_S87,Extend,Clipper^B

 ^B®^B
!seealso: 
'------------------------------------------------------------------------------



!short:^A1FÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ^A1D
!short: R_BackUp()      Creates a COMPRESSED BACKUP on one or more diskettes
'------------------------------------------------------------------------------
 ^BR_BackUp()^B
 Creates a COMPRESSED BACKUP on one or more diskettes
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BSyntax^B
        ^A1FnRetCode = R_Backup ( [ cSkeleton [, cDestDrv [, cFileName^A1B
                        ^A1F[, nBarLen [, nBarRow [, nBarCol [, cBarChr^A1B
                        ^A1F[, cBarColor^A1B
                        ^A1F[, lEscape [, lSilent [, cRBckFnc^A1B
                        ^A1F[, nMsgRow [, nMsgCol [, cInsMsg [, cMsgColor^A1B
                        ^A1F] ] ] ] ] ] ] ] ] ] ] ] ] ] ] )^A1B

 ^BUsing default values^B
        Argument not passed -or-
        To force the default value for a ^A1FCHARACTER^A1B argument just pass an
        ^A1FEMPTY STRING ('')^A1B.
        To force the default value for a ^A1FNUMERIC^A1B argument just pass a
        value of ^A1F-1^A1B.

 ^BArguments^B
        ^A1FcSkeleton^A1B       STRING with file skeletons of files to backup
                                p.e. 'C:\SYSTEM\*.DBF'
                        Multiple skeletons have to be separated by a
                        semi-colon (;)
                        p.e. 'C:\SYSTEM\*.DBF;C:\DBASE\R*.NTX'

                        A skeleton may contain a DRIVE and/or a PATH and
                        the DOS WILDCARDS '*' and '?'.

                        If no drive is included the default drive will be
                        assumed; if no path is included the default path
                        will be assumed.

                        Default : ^B'*.*' (= ALL files on the current DRIVE^B
                                  ^B         and DIRECTORY)^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcDestDrv^A1B        Destination drive for backup : 'A:', 'B:', ....

                        Default : ^B'A:'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcFileName^A1B       File name of the backup file(s) (w/o extension)

                        Notes   : - Maximal string length is 8 characters.

                                  - The extension of the backup file name is
                                    a sequence number ( '.000', '.001', ...)
                                    that is generated by RBackUp().

                        Default : ^B'@RBackUp'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarLen^A1B         Length of the progression bar

                        Range   : 0 to 79

                        Default : ^B0 = NO progression bar^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarRow^A1B         Screen row for the progression bar

                        Range   : 0 to 24

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarCol^A1B         Screen column for the progression bar

                        Range   : 0 to ( 79 - nBarLen )

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcBarChr^A1B         Character used for displaying progression bar

                        Default : ^BÛ = Chr ( 219 )^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcBarColor^A1B       Color of the progression bar (Clipper Color String)

                        Default : ^B'GR+/G' = Yellow on Green^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlEscape^A1B         .F.     : R_BackUp() can't be interrupted by the user
                        .T.     : R_BackUp() may be interrupted by pressing
                                  the <Esc>-key

                        Default : ^B.F. = <Esc>-key DISABLED^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlSilent^A1B         .T.     : No alert sounds
                        .F.     : Give a beep when displaying 'INSERT DISK'
                                  message

                        Default : ^B.F. = Give a beep^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcRBckFnc^A1B        User-defined function that is evaluated once for each
                                file, just before it is added to the backup.

                        Notes   : - The CURRENT FILE NAME is passed to
                                    cRBckFnc (Format : d:\path\filename.ext)

                                  - cRBckFnc, when used, should return one of
                                    the following values :

                                    ^B0 (= BU_ABORT)^B
                                        Backup process will be ABORTED.
                                        In this case, R_Backup() returns
                                        the ^B8 (= BU_USER_ABORT)^B return code

                                    ^B1 (= BU_CONT)^B
                                        Backup process will CONTINUE.

                        Default : ^BNo cRBckFnc-function^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgRow^A1B         Row for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to 24

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgCol^A1B         Column for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to ( 79 - Len ( cInsMsg ) )

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcInsMsg^A1B         'INSERT NEXT DISK' message to display
                        Message that will be displayed when the user has
                        to insert the next backup disk.
                        The DISK NUMBER is generated by R_BackUp().
                        Insert '^BXXX^B' in the cInsMsg-string on the position
                        where the DISK NUMBER should be substituted.
                        P.e. : 'Please insert disk # XXX into drive A:'
                        On runtime the XXX will be replaced with the current
                        disk number.

                        Default :
                        If lEscape = .T.
               ^B'Insert backup disk # XXX into drive d:  <ÄÙ=Okay, Esc=Cancel'^B
                        If lEscape = .F.
               ^B'Insert backup disk # XXX into drive d:  Press <ÄÙ when ready'^B
                        (For d:, the actual backup drive will be substituted)
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcMsgColor^A1B       Color, used to display the 'INSERT NEXT DISK' message
                        (Clipper Color String)

                        Default : ^B'W+*/B' = Blinking Bright White on Blue^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BReturns^B
        ^A1FnRetCode^A1B        Return code

                        Possible return codes :

                         0 = BU_OKAY           No errors detected
                         1 = BU_INVALID_PARM   Invalid parameter(s) passed
                         2 = BU_OPEN_INPUT     Error opening  input  file
                         4 = BU_CREATE_OUTPUT  Error creating output file
                         5 = BU_READ_INPUT     Error reading  input  file
                         6 = BU_WRITE_OUTPUT   Error writing  output file
                         7 = BU_NO_FILES_FOUND No files found to backup
                         8 = BU_USER_ABORT     Function aborted by user
                         9 = BU_INVALID_DRIVE  Invalid backup drive/disk

                        See also the ^BErrorCodes^B-section in this guide.

 ^BDescription^B
        Creates a COMPRESSED backup of the specified files.

        ^RÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·^R
        ^R³                        -+- ^B CAUTION ^B^R -+-                       º^R
        ^R³                                                                º^R
        ^R³   ^B ALL FILES IN THE ROOT DIRECTORY OF THE DESTINATION DISK ^B^R    º^R
        ^R³   ^B                     WILL BE DELETED !!                  ^B^R    º^R
        ^R³                                                                º^R
        ^RÔÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼^R

        ^A1FFeatures^A1B :
        - Compression of the files that are backed up
        - (Optional) progression bar display
        - Multiple disk backup
        - User-definable messages

        ^A1FNotes^A1B :
        - Make sure that the files to be backed up are closed
        - Empty files ( = files with filesize = 0) are not backed up !

 ^BExample^B
        *-- Error text
        PUBLIC  aErrTxt [ 10 ]
        aErrTxt [ 1] = 'Invalid parameter(s) passed'
        aErrTxt [ 2] = 'Error OPENING input file'
        aErrTxt [ 3] = 'Wrong version of RBckLib'
        aErrTxt [ 4] = 'Error CREATING output file'
        aErrTxt [ 5] = 'Error READING input file'
        aErrTxt [ 6] = 'Error WRITING output file'
        aErrTxt [ 7] = 'No files found to backup'
        aErrTxt [ 8] = 'Function aborted by user'
        aErrTxt [ 9] = 'Invalid backup drive/disk'
        aErrTxt [10] = 'Invalid restore directory'

        PRIVATE nRetCode                        && Return code R_BackUp()

        *------------------------------------------------------------------
        * Files to be backed up : 1) 'C:\SYSTEM1\*.DBF'
        *                         2) '*.DBF' and '*.NTX' in the current
        *                            directory on the current drive
        * Destination drive     : 'B:'
        * Backup file name      : '@RBackUp' (default)
        * Progression bar       : Length    = 30
        *                         Row       = Centered (default)
        *                         Column    = Centered (default)
        *                         Character = '#'
        *                         Color     = 'GR+/R'
        * Interruptable         : lEscape   = .T.
        * Give a beep           : lSilent   = .F.
        * User-defined function : 'ShowName'
        * Insert disk message   : Row       = 24
        *                         Column    = Centered (default)
        *                         Msg Text  = Default message
        *                         Msg Color = 'W+*/B'  (default)
        *------------------------------------------------------------------
        nRetCode = ^BR_BackUp^B ( 'C:\SYSTEM1\*.DBF;*.DBF;*.NTX', ;
                        'B:', '', 30, -1, -1, '#', 'GR+/R', ;
                        .T., .F., 'ShowName', ;
                        24, -1, '', '' )

        IF nRetCode != 0
                *-- Oops, error while backupping ...

                *-- Display the error message text
                @24,0 SAY 'Backup error : ' + aErrTxt [ nRetCode ]
        ENDIF

        *-- Continuation of the program
        [...]

        QUIT

        *------------------------------------------------------------------
        * Display the name of the file being backed up
        *------------------------------------------------------------------
        FUNCTION  ShowName
        PARAMETER cFileName

        @14, 0 SAY 'Processing : ' + cFileName

        RETURN  1                       && (=BU_CONT) Continue backup

        More examples can be found in the demo program ^BRBckDemS.PRG^B.

 ^BCaution^B

        ^RÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·^R
        ^R³                         -+- CAUTION -+-                        º^R
        ^R³                                                                º^R
        ^R³     IN THE UN-REGISTERED  VERSION OF RBCKLIB THE FOLLOWING     º^R
        ^R³     REGISTRATION MESSAGE WILL BE DISPLAYED AT RANDOM TIMES     º^R
        ^R³          (WHILE EXECUTING THE R_BackUp() FUNCTION) :           º^R
        ^R³                                                                º^R
        ^R³ ^BUN-Registered version of RBckLib -+- Please wait for 9 seconds^B^R º^R
        ^R³                                                                º^R
        ^R³       AFTER A 9 SECONDS DELAY THE PROGRAM WILL CONTINUE.       º^R
        ^RÔÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼^R

 ^B®^B
!seealso: "R_Restore()" "R_BckList()" rbck_003.ngo:"ErrorCodes" rbck_004.ngo:"Registration" 
'------------------------------------------------------------------------------



!short: R_Restore()     Restores files backed up by the R_BackUp()-function
'------------------------------------------------------------------------------
 ^BR_Restore()^B
 Restores files backed up by the R_BackUp()-function
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BSyntax^B
        ^A1FnRetCode = R_Restore ( [ cSrcDrv [, cMask [, cDestSpec^A1B
                        ^A1F[, cFileName^A1B
                        ^A1F[, nBarLen [, nBarRow [, nBarCol [, cBarChr^A1B
                        ^A1F[, cBarColor^A1B
                        ^A1F[, lEscape [, lSilent [, cRBckFnc^A1B
                        ^A1F[, nMsgRow [, nMsgCol [, cInsMsg [, cMsgColor^A1B
                        ^A1F[, cConfirm^A1B
                        ^A1F] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] )^A1B

 ^BUsing default values^B
        Argument not passed -or-
        To force the default value for a ^A1FCHARACTER^A1B argument just pass an
        ^A1FEMPTY STRING ('')^A1B.
        To force the default value for a ^A1FNUMERIC^A1B argument just pass a
        value of ^A1F-1^A1B.

 ^BArguments^B
        ^A1FcSrcDrv^A1B         Source drive for restore : 'A:', 'B:', ....

                        Default : ^B'A:'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcMask^A1B           STRING with file masks of files to restore
                                p.e. '*.DBF'
                        Multiple masks should be separated by a semi-colon (;)
                        p.e. '*.DBF;*.NTX;*.FRM'

                        A mask may contain the DOS wildcards '*' and '?';
                        DRIVES and/or DIRECTORIES are NOT allowed ...

                        Default : ^B'*.*' (= ALL files in the backup-set)^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcDestSpec^A1B       Destination specification (DRIVE and/or DIRECTORY)
                                p.e. 'C:\TEMPDIR'

                        Notes   : - The specification may NOT contain
                                    FILE NAMES (nor extensions)

                                  - If NO (or an EMPTY) DESTINATION
                                    SPECIFICATION is passed, the files will
                                    be restored to the drive and directory
                                    from which they were backed up (the path
                                    names are stored in the backup-set)

                                  - If no DRIVE is passed, the default drive
                                    will be assumed.

                                  - If no DIRECTORY is passed, the default
                                    directory will be assumed.

                                  - If the TARGET DIRECTORY doesn't exist
                                    it will be created !

                        Default : ^BThe DRIVE and DIRECTORY from which^B
                                  ^Bthe files originally were backed up
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcFileName^A1B       File name of the backup file to be used for restore
                        (w/o extension)

                        Notes   : - Maximal string length is 8 characters.
                                  - The extension of the backup file name is
                                    a sequence number ( '.000', '.001', ...)
                                    that is generated by RBackUp().

                        Default : ^B'@RBackUp'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarLen^A1B         Length of the progression bar

                        Range   : 0 to 79

                        Default : ^B0 = NO progression bar^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarRow^A1B         Screen row for the progression bar

                        Range   : 0 to 24

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnBarCol^A1B         Screen column for the progression bar

                        Range   : 0 to ( 79 - nBarLen )

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcBarChr^A1B         Character used for displaying progression bar

                        Default : ^BÛ = Chr ( 219 )^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcBarColor^A1B       Color of the progression bar (Clipper Color String)

                        Default : ^B'GR+/G' = Yellow on Green^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlEscape^A1B         .F.     : R_Restore() can't be interrupted
                        .T.     : R_Restore() may be interrupted by pressing
                                  the <Esc>-key

                        Default : ^B.F. = <Esc>-key DISABLED^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlSilent^A1B         .T.     : No alert sounds
                        .F.     : Give a beep when displaying 'INSERT DISK'
                                  message

                        Default : ^B.F. = Give a beep^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcRBckFnc^A1B        User-defined function that is evaluated once for each
                          file, just before it is extracted from the backup-set.

                        Notes   : - The CURRENT FILE NAME is passed to
                                    cRBckFnc (Format : d:\path\filename.ext)

                                  - cRBckFnc, when used, should return one of
                                    the following values :

                                    ^B0 (= BU_ABORT)^B
                                        Restore process will be ABORTED.
                                        In this case, R_Restore() returns
                                        the ^B8 (= BU_USER_ABORT)^B return code

                                    ^B1 (= BU_CONT)^B
                                        Restore process will CONTINUE.

                        Default : ^BNo cRBckFnc-function^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgRow^A1B         Row for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to 24

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgCol^A1B         Column for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to ( 79 - Len ( cInsMsg ) )

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcInsMsg^A1B         'INSERT NEXT DISK' message to display
                        Message that will be displayed when the user has
                        to insert the next backup disk.
                        The DISK NUMBER is generated by R_BackUp().
                        Insert '^BXXX^B' in the cInsMsg-string on the position
                        where the DISK NUMBER should be substituted.
                        P.e. : 'Please insert disk # XXX into drive A:'
                        On runtime the XXX will be replaced with the current
                        disk number.

                        Default :
                        If lEscape = .T.
               ^B'Insert backup disk # XXX into drive d:  <ÄÙ=Okay, Esc=Cancel'^B
                        If lEscape = .F.
               ^B'Insert backup disk # XXX into drive d:  Press <ÄÙ when ready'^B
                        (For d:, the actual backup drive will be substituted)
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcMsgColor^A1B       Color, used to display the 'INSERT NEXT DISK' message
                        (Clipper Color String)

                        Default : ^B'W+*/B' = Blinking Bright White on Blue^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcConfirm^A1B        User-defined function that is evaluated if the file
                        to be extracted already exists on the restore location
                        (cDestSpec or original drive\path)

                        Notes   : - The file name of the file that might be
                                    overwritten is passed to cConfirm.

                                  - cConfirm, when used, should return one of
                                    the following values :
                                    ^B0 (= BU_ABORT)^B
                                          R_Restore() will be aborted.
                                          In this case, R_Restore() returns
                                          the ^BBU_USER_ABORT^B return code

                                    ^B2 (= BU_SKIPFILE)^B
                                          File will NOT be restored.

                                    ^B3 (= BU_OVERWRITE)^B
                                          Existing file will be OVERWRITTEN.

                        Default : ^BNo cConfirm-function^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BReturns^B
        ^A1FnRetCode^A1B        Return code

                        Possible return codes :

                         0 = BU_OKAY           No errors detected
                         1 = BU_INVALID_PARM   Invalid parameter(s) passed
                         2 = BU_OPEN_INPUT     Error opening  input  file
                         3 = BU_WRONG_VERSION  Wrong version of RBckLib
                         4 = BU_CREATE_OUTPUT  Error creating output file
                         5 = BU_READ_INPUT     Error reading  input  file
                         6 = BU_WRITE_OUTPUT   Error writing  output file
                         8 = BU_USER_ABORT     Backup aborted by user
                         9 = BU_INVALID_DRIVE  Invalid backup drive/disk
                        10 = BU_INVALID_DIR    Invalid restore directory

                        See also the ^BErrorCodes^B-section in this guide.

 ^BDescription^B
        Restores one or more files from a backup-set, created by the
        R_BackUp()-function.

        ^A1FNotes^A1B :
        - Make sure that the files to be restored are closed.

        - If you included a copy of the running .EXE file in the backup-set,
          it is not possible to restore the file to it's original location
          (the running copy is opened ...).
          The only way to extract the file is to another location.
          (Use the cDestSpec parameter)

 ^BExample^B
        *-- Error text
        PUBLIC  aErrTxt [ 10 ]
        aErrTxt [ 1] = 'Invalid parameter(s) passed'
        aErrTxt [ 2] = 'Error OPENING input file'
        aErrTxt [ 3] = 'Wrong version of RBckLib'
        aErrTxt [ 4] = 'Error CREATING output file'
        aErrTxt [ 5] = 'Error READING input file'
        aErrTxt [ 6] = 'Error WRITING output file'
        aErrTxt [ 7] = 'No files found to backup'
        aErrTxt [ 8] = 'Function aborted by user'
        aErrTxt [ 9] = 'Invalid backup drive/disk'
        aErrTxt [10] = 'Invalid restore directory'

        PRIVATE nRetCode                        && Return code R_Restore()

        *------------------------------------------------------------------
        * Source drive          : 'A:'
        * Files to restore      : '*.DBF' and '*.NTX'
        * Destination           : Extract to original location (default)
        * Backup file name      : '@RBackUp' (default)
        * Progression bar       : Length    = 50
        *                         Row       = 22
        *                         Column    = Centered (default)
        *                         Character = Chr (177) (±)
        *                         Color     = 'GR+/B'
        * Interruptable         : Not interruptable
        * User-defined function : 'ShowName'
        * Insert disk message   : Row       = 24
        *                         Column    = Centered (default)
        *                         Msg Text  = New message
        *                         Msg Color = 'GR+/B'
        * Confirmation function : None : existing files will be overwritten
        *                         See for a detailed sample of the CONFIRM
        *                         function the demo program RBckDemS.PRG !!
        *------------------------------------------------------------------
        nRetCode = ^BR_Restore^B ( 'A:', '*.DBF;*.NTX', '',  '', ;
                        50, 22, -1, Chr (177), 'GR+/B', ;
                        .F., 'ShowName', ;
                        24, -1, 'Insert disk XXX into drive A:','GR+/B' )

        IF nRetCode != BU_OKAY
                *-- Oops, error while restoring ...

                *-- Display the error message text
                @24,0 SAY 'Restore error : ' + aErrTxt [ nRetCode ]
        ENDIF

        *-- Continuation of the program
        [...]

        QUIT

        *------------------------------------------------------------------
        * User-defined function for DISPLAYING THE CURRENT FILENAME
        *------------------------------------------------------------------
        FUNCTION  ShowName
        PARAMETER cFileName

        @14, 0 SAY 'Processing : ' + cFileName

        RETURN  1                       && (=BU_CONT) Continue restore

        More examples can be found in the demo program ^BRBckDemS.PRG^B.

 ^BCaution^B

        ^RÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·^R
        ^R³                         -+- CAUTION -+-                        º^R
        ^R³                                                                º^R
        ^R³     IN THE UN-REGISTERED  VERSION OF RBCKLIB THE FOLLOWING     º^R
        ^R³     REGISTRATION MESSAGE WILL BE DISPLAYED AT RANDOM TIMES     º^R
        ^R³          (WHILE EXECUTING THE R_Restore() FUNCTION) :          º^R
        ^R³                                                                º^R
        ^R³ ^BUN-Registered version of RBckLib -+- Please wait for 9 seconds^B^R º^R
        ^R³                                                                º^R
        ^R³       AFTER A 9 SECONDS DELAY THE PROGRAM WILL CONTINUE.       º^R
        ^RÔÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼^R

 ^B®^B
!seealso: "R_BackUp()" "R_BckList()" rbck_003.ngo:"ErrorCodes" rbck_004.ngo:"Registration" 
'------------------------------------------------------------------------------



!short: R_BckList()     Gets the contents of a backup-set into arrays
'------------------------------------------------------------------------------
 ^BR_BckList()^B
 Gets the contents of a backup-set into arrays
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BSyntax^B
        ^A1FnRetCode = R_BckList ( [ cSrcDrv [, cFileName^A1B
                        ^A1F[, lEscape [, lSilent^A1B
                        ^A1F[, nMsgRow [, nMsgCol [, cInsMsg [, cMsgColor^A1B
                        ^A1F[, lAskDisk [,^A1B
                        ^A1F[, acFileSpec [, anFSize [, acFDate [, acFTime^A1B
                        ^A1F[, acFileName ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] )^A1B

 ^BArguments^B
        ^A1FcSrcDrv^A1B         Source drive for backup-set : 'A:', 'B:', ....

                        Default : ^B'A:'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcFileName^A1B       File name of the backup file(s) (w/o extension)

                        Notes   : - Maximal string length is 8 characters.

                                  - The extension of the backup file name is
                                    a sequence number ( '.000', '.001', ...)
                                    that is generated by RBackUp().

                        Default : ^B'@RBackUp'^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlEscape^A1B         .F.     : R_BckList() can't be interrupted
                        .T.     : R_BckList() may be interrupted by pressing
                                  the <Esc>-key

                        Default : ^B.F. = <Esc>-key DISABLED^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlSilent^A1B         .T.     : No alert sounds
                        .F.     : Give a beep when displaying 'INSERT DISK'
                                  message

                        Default : ^B.F. = Give a beep^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgRow^A1B         Row for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to 24

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FnMsgCol^A1B         Column for displaying the 'INSERT NEXT DISK' message

                        Range   : 0 to ( 79 - Len ( cInsMsg ) )

                        Default : ^BCENTERED on the screen^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcInsMsg^A1B         'INSERT NEXT DISK' message to display
                        Message that will be displayed when the user has
                        to insert the next backup disk.
                        The DISK NUMBER is generated by R_BackUp().
                        Insert '^BXXX^B' in the cInsMsg-string on the position
                        where the DISK NUMBER should be substituted.
                        P.e. : 'Please insert disk # XXX into drive A:'
                        On runtime the XXX will be replaced with the current
                        disk number.

                        Default :
                        If lEscape = .T.
               ^B'Insert backup disk # XXX into drive d:  <ÄÙ=Okay, Esc=Cancel'^B
                        If lEscape = .F.
               ^B'Insert backup disk # XXX into drive d:  Press <ÄÙ when ready'^B
                        (For d:, the actual backup drive will be substituted)
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FcMsgColor^A1B       Color, used to display the 'INSERT NEXT DISK' message
                        (Clipper Color String)

                        Default : ^B'W+*/B' = Blinking Bright White on Blue^B
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FlAskDisk^A1B        Flag that indicates if the user should be asked
                        to insert the first backup disk.

                        .T.     : Ask to insert the first BACKUP DISK
                        .F.     : Don't ask for first disk (if already
                                  inserted)

                        Default : ^B.T. = Ask for first disk^B

                        Usage   : After you examined the number of files in a
                                  backup-set (= using the R_BckList()
                                  function without passing the arrays) the
                                  correct disk (first disk of the set) will
                                  already be available in the disk drive.
                                  In that case, this flag can be used to
                                  suppress the 'INSERT FIRST DISK' message.
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FacFileSpec^A1B      Array to fill with the file specs of the files
                        in the backup-set.
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FanFSize^A1B         Array to fill with the file sizes of the files
                        in the backup-set.
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FacFDate^A1B         Array to fill with the file dates of the files
                        in the backup-set.
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FacFTime^A1B         Array to fill with the file times of the files
                        in the backup-set.
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        ^A1FacFileName^A1B      Array to fill with the names of the backup files
                        containing the current file (p.e. '@RBackUp.003'
                        means that the current file starts on disk 3 of a
                        backup-set with the name @RBackUp).
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 ^BReturns^B
        ^A1FnRetCode^A1B        The return code, nRetCode, depends on the use
                        of the RBckList() function :

                        1) Determine the number of files in a backup-set :
                           Don't pass the array parameters (so the number
                           of parameters should be less than 8)
                           (Note: only backup disk 001 is needed to determine
                                  the number of files in the set)

                           IF nRetCode > 0
                                nRetCode contains the number of files in the
                                backup-set

                           IF nRetCode < 0
                                There is an error detected ....
                                Possible values are :
                                -1 = Invalid parameter(s) passed
                                -2 = Error opening input file
                                -3 = Wrong version of RBckLib
                                -5 = Error reading input file
                                -8 = Function aborted by user
                                -9 = Invalid backup drive and/or disk

                        2) Gather the information of the files in a
                           backup-set :
                           Pass at least one array parameter (so the number
                           of parameters should be greater than 7)

                           IF nRetCode = 0
                                Arrays are filled with the requested file
                                information

                           IF nRetCode < 0
                                There is an error detected ....
                                Possible values are :
                                -1 = Invalid parameter(s) passed
                                -2 = Error opening input file
                                -3 = Wrong version of RBckLib
                                -5 = Error reading input file
                                -8 = Function aborted by user
                                -9 = Invalid backup drive and/or disk

 ^BDescription^B
        R_BckList fills one or more arrays with information on the files in
        a specified backup-set.

        If less than 8 parameters are passed, the number of files in the
        specified backup-set is returned. This value must be used to
        dimension the arrays that will receive the file info.

 ^BExample^B
        *-- Error text
        PUBLIC  aErrTxt [ 10 ]
        aErrTxt [ 1] = 'Invalid parameter(s) passed'
        aErrTxt [ 2] = 'Error OPENING input file'
        aErrTxt [ 3] = 'Wrong version of RBckLib'
        aErrTxt [ 4] = 'Error CREATING output file'
        aErrTxt [ 5] = 'Error READING input file'
        aErrTxt [ 6] = 'Error WRITING output file'
        aErrTxt [ 7] = 'No files found to backup'
        aErrTxt [ 8] = 'Function aborted by user'
        aErrTxt [ 9] = 'Invalid backup drive/disk'
        aErrTxt [10] = 'Invalid restore directory'

        PRIVATE nFiles
        PRIVATE nFile
        PRIVATE cOldCol

        @23,20 SAY 'Just a moment, examining backup-set ....'

        *-- Determine the number of files in the backup-set A:\@RBACKUP
        nFiles = R_BckList ( 'A:', '', .T., .F., 23, -1, '' )

        IF nFiles < 0
                *-- Error detected : Display error message
                ? 'Error detected : ' + aErrTxt [ -(nFiles) ]
                Inkey ( 0 )

        ELSE
                *-- No error : nRetCode contains number of files in the
                *--     backup-set

                *-- Dimension arrays to hold file info
                DECLARE acFileSpec [ nFiles ]
                DECLARE anFSize    [ nFiles ]
                DECLARE acFDate    [ nFiles ]
                DECLARE acFTime    [ nFiles ]
                DECLARE acFileName [ nFiles ]

                nRetCode = R_BckList ( 'A:', '', .T., .F., 23, -1, '', '', ;
                        .F., acFileSpec, anFSize, acFDate, ;
                        acFTime, acFileName )

                IF nRetCode < 0
                        *-- Error detected : Display error message
                        ? 'Error detected : ' + aErrTxt [ -(nFiles) ]
                ELSE
                        *-- No error detected : Display file info
                        @2,0 Clear

                        cOldCol = SetColor ( 'W+/RB' )

                        @3,5 SAY '    Filespec                       ' + ;
                                        'Size Date       Time  BackUp-file  '

                        SetColor ( 'W+/BG' )

                        FOR nFile = 1 to nFiles

                                @ nFile + 3, 5 SAY Str ( nFile, 3 ) + ;
                                        ' ' + ;
                                        acFileSpec [ nFile ] + ' ' + ;
                                        Str ( anFSize [ nFile ], 8 ) + ;
                                        ' ' + ;
                                        acFDate [ nFile ] + ' ' + ;
                                        acFTime [ nFile ] + ' ' + ;
                                        acFileName [ nFile ] + ' '

                        NEXT

                        *-- Wait for a key to be pressed
                        SetColor ( cOldCol )

                        @ 24, 32 SAY 'Hit any key ....'

                        InKey ( 0 )

                ENDIF

        ENDIF

        More examples can be found in the demo program ^BRBckDemS.PRG^B.

 ^BCaution^B

        ^RÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·^R
        ^R³                         -+- CAUTION -+-                        º^R
        ^R³                                                                º^R
        ^R³     IN THE UN-REGISTERED  VERSION OF RBCKLIB THE FOLLOWING     º^R
        ^R³     REGISTRATION MESSAGE WILL BE DISPLAYED AT RANDOM TIMES     º^R
        ^R³          (WHILE EXECUTING THE R_BckList() FUNCTION) :          º^R
        ^R³                                                                º^R
        ^R³ ^BUN-Registered version of RBckLib -+- Please wait for 9 seconds^B^R º^R
        ^R³                                                                º^R
        ^R³       AFTER A 9 SECONDS DELAY THE PROGRAM WILL CONTINUE.       º^R
        ^RÔÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼^R

 ^B®^B
!seealso: "R_BackUp()" "R_Restore()" rbck_003.ngo:"ErrorCodes" rbck_004.ngo:"Registration" 
'------------------------------------------------------------------------------



!short:
!short:        ^A4F                                                              ^A1B
!short:        ^A4F  T H E   C A - C L I P P E R    B A C K U P   L I B R A R Y  ^A1B
!short:        ^A4F                                                              ^A1B
!short:        ^A3FÛÛÛÛßßßßßßßÛÛßßßßßßßÛÛÛÛÛÛÛÛÛÛÛßÛÛÛÛÛßÛÛßÛÛÛÛÛÛÛÛßßÛÛßÛÛÛÛÛÛÛÛ^A3F
!short:        ^A3FÛÛÛ^A1BÛÛÛÛÛÛÛ^A73Û^A3FÛ^A1BÛÛÛÛÛÛÛ^A73Û^A3FÛÛÛÛÛÛÛÛÛÛ^A1BÛ^A73Û^A3FÛÛÛÛ^A1BÛ^A3FÜÛ^A1BÛ^A73Û^A3FÛÛÛÛÛÛÛ^A1BÛÛ^A3FÜÛ^A1BÛ^A73Û^A3FÛÛÛÛÛÛÛÛ^A3F
!short:        ^A3FÛÛÛ^A1BÛ^A73Û^A3Fßßßß^A1BÛ^A73Û^A3FÛ^A1BÛ^A73Û^A3Fßßßß^A1BÛ^A3FÜÛÛßßßßßßßÛ^A1BÛ^A73Û^A3Fßßß^A1BÛ^A3FÜÛÛ^A1BÛ^A73Û^A3FÛÛÛÛÛÛÛÛßßÛ^A1BÛ^A73Û^A3FßßßßßßÛÛ^A3F
!short:        ^A3FÛÛÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛ^A1BÛÛÛÛÛÛ^A3FÜßÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛ^A1BÛÛÛÛÛ^A3FÜßÛÛ^A1BÛ^A73Û^A3FÛÛÛÛÛÛÛ^A1BÛÛ^A73Û^A3FÛ^A1BÛÛÛÛÛÛÛ^A73Û^A3FÛÛ^A3F
!short:        ^A3FÛÛÛ^A1BÛ^A73Û^A3FÛÛÛ^A1BÛ^A3FÜßÛ^A1BÛ^A73Û^A3Fßßßß^A1BÛ^A73Û^A3FÛ^A1BÛ^A73Û^A3FßßßßßßÛ^A1BÛ^A73Û^A3FÛÛÛ^A1BÛ^A3FÜßÛ^A1BÛ^A73Û^A3FßßßßßßÛ^A1BÛÛ^A73Û^A3FÛ^A1BÛ^A73Û^A3Fßßßß^A1BÛ^A73Û^A3FÛÛ^A3F
!short:        ^A3FÛÛÛ^A1BÛ^A73^A3FÜÛÛÛÛ^A1BÛ^A3FÜÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛ^A1BÛ^A3FÜÛÛÛÛ^A1BÛ^A3FÜÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛ^A1BÛÛ^A3FÜÛ^A1BÛÛÛÛÛÛÛ^A3FÜÛÛ^A3F
!short:        ^A3FÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ^A1B
!short:        ^A79ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ^A1B
!short:        ^A79ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ RvG Clipper Collection ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ^A1B
!short:        ^A79ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ^A1B
!short:
!short: ^A1E18/01/95  RBckLib v1.0d (c) 1995 Rolf van Gelder, Eindhoven, The Netherlands^A1B
